import { PlansService } from './plans.service';
export declare class PlansController {
    private readonly plansService;
    constructor(plansService: PlansService);
    createPlan(planDto: any): Promise<any>;
    createPlanWithVersion(planDto: any): Promise<any>;
    createPlanWithNewVersion(planDto: any): Promise<any>;
    findAllPlans(): Promise<any>;
    findAllPaginationVersion(query: any): Promise<any>;
    findAllPagination(query: any): Promise<any>;
    findAllPlansWithCategoriesAndProducts(): Promise<any>;
    findAll(page?: number, limit?: number): Promise<any>;
    findByFilter(query: any): Promise<import("./entity/plan.entity").Plan[]>;
    findOne(id: number): Promise<any>;
    getPlanUser(planName: string, userId: string): Promise<any>;
    setProductCategoriesPlan(params: any): Promise<any>;
    getProductsCategoriesPlan(planId: number): Promise<any>;
    updatePlan(id: number, updatedPlanDto: any): Promise<any>;
    update(id: number, isActive: boolean): Promise<any>;
    findAllRates(): Promise<any>;
    findAllVersionsPlan(idPlan: number): Promise<any>;
    getPaywallPlan(site: string, id: string, userId: string): Promise<any>;
    createPlanTemplate(body: any): Promise<any>;
    findAllPlansTemplate(id_template: string): Promise<any>;
    deleteCategory(planId: number, idPlansProductCategory: number): Promise<void>;
    deleteCategoryProduct(idPlan: number, idProduct: number): Promise<void>;
    updateCategoryAccess(idPlansProductCategory: number, body: any): Promise<import("../common/entity/categorys-access.entity").CategorysAccess>;
    updatePlanState(idPlan: number, body: any): Promise<void>;
    setPlanVersioning(body: any): Promise<any>;
    getPlanVersioning(idPlan: number): Promise<any>;
    setPlanSubscription: any;
    getPlanSubscription(idPlan: number, idUser: number): Promise<any>;
}
